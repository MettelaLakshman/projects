import cv2

# Load the pre-trained Haar Cascade classifier for face detection
face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')

# Initialize the webcam
cap = cv2.VideoCapture(0)

while True:
    # Capture frame-by-frame
    ret, frame = cap.read()

    # Convert the frame to grayscale
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)

    # Detect faces in the frame
    faces = face_cascade.detectMultiScale(gray, scaleFactor=1.1, minNeighbors=5, minSize=(30, 30))

    # Draw rectangles around the faces
    for (x, y, w, h) in faces:
        cv2.rectangle(frame, (x, y), (x+w, y+h), (255, 0, 0), 2)

    # Display the resulting frame with the number of faces
    cv2.putText(frame, f'Faces: {len(faces)}', (10, 30), cv2.FONT_HERSHEY_SIMPLEX, 1, (255, 255, 255), 2, cv2.LINE_AA)
    cv2.imshow('Webcam - Face Detection', frame)

    # Wait for 'q' key to stop the program and 'c' key to capture the photo
    key = cv2.waitKey(1)
    if key == ord('q'):
        break
    elif key == ord('c'):
        # Save the captured image
        cv2.imwrite('captured_image.jpg', frame)
        print(f"Photo captured and saved! Number of faces: {len(faces)}")

# Release the webcam and close the window
cap.release()
cv2.destroyAllWindows()
